<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://perlnews.ru/blog/tag/tips/</id>
    <title>PerlNews.Ru</title>
    <updated>2015-05-20T00:00:00Z</updated>
    <link href="http://perlnews.ru/blog/tag/tips.atom" rel="self" />
    <link href="http://perlnews.ru/blog/tag/tips/" rel="alternate" />
    <generator version="0.087">Statocles</generator>
    <entry>
        <id>http://perlnews.ru/blog/2015/05/20/01-perl-microoptimization-tricks.html</id>
        <title>Полезные трюки с микрооптимизацией</title>
        <author><name>perlnews</name></author>
        <link href="http://perlnews.ru/blog/2015/05/20/01-perl-microoptimization-tricks.html" rel="alternate" />
        <content type="html"><![CDATA[
            <p>В рассылке perl5-porters был задан
<a href="http://www.nntp.perl.org/group/perl.perl5.porters/2015/05/msg228068.html">вопрос</a>,
почему две операции сильно отличаются по скорости (в пользу <code>do</code>):</p>

<pre><code>do { ; }
{ ; }
</code></pre>

<p><em>Zefram</em>
<a href="http://www.nntp.perl.org/group/perl.perl5.porters/2015/05/msg228069.html">указал</a>
на то, что пустой блок рассматривается как цикл, который выполняется один раз,
и для него формируется фрейм-контекст с поддержкой динамических операций вроде
<code>next</code>. В то время как для <code>do</code> устанавливается только область видимости, что
гораздо быстрее.</p>

<p>Кроме этого было
<a href="http://www.nntp.perl.org/group/perl.perl5.porters/2015/05/msg228074.html">замечено</a>,
что операция <code>;</code> это отдельная операция, которая устанавливает номер строки. В
противовес этому <code>,</code> не имеет подобного оверхеда. Например:</p>

<pre><code>$x = 1; $y = 2; print &quot;$x $y&quot;;
$x = 1, $y = 2, print &quot;$x $y&quot;;
</code></pre>

<p>Оба выражения выполняют одно и то же, но вторая запись будет работать быстрее.</p>

<p>Эта информация сразу вдохновила Питера Рэбиттсона использовать этот простой
трюк на практике. Он продемонстрировал
<a href="https://github.com/dbsrgits/dbix-class/commit/05a5ca4b">коммит</a>, который на
15% увеличивает производительность <code>DBIx::Class</code> просто заменив все <code>;</code> на <code>,</code>
в генерируемом коде для строкового eval. Этот прирост становится заметен на
резалтсетах с ≥1000 рядов.</p>

            <p>Темы:
                <a href="http://perlnews.ru/blog/tag/perl/">Perl</a>
                <a href="http://perlnews.ru/blog/tag/tips/">tips</a>
                <a href="http://perlnews.ru/blog/tag/benchmark/">benchmark</a>
            </p>
        ]]></content>
        <updated>2015-05-20T00:00:00Z</updated>
        <category term="Perl" />
        <category term="tips" />
        <category term="benchmark" />
    </entry>
</feed>

